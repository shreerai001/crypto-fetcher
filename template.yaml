AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for nimo

Parameters:
  NimoRoleArn:
    Type: String
    Description: ARN of the IAM role nimo

Globals:
  Function:
    Timeout: 3
    Runtime: nodejs22.x
    Architectures:
      - x86_64

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: dist/handlers/app.lambdaHandler
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
      Role: !Ref NimoRoleArn
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/handlers/app.ts
        OutExtension:
          - .js=.js

  CryptoDetailsFetcherFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: dist/handlers/fetchCryptoData.lambdaHandler
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref CryptoPricesTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CryptoPricesTable
      Role: !Ref NimoRoleArn
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/handlers/fetchCryptoData.ts
        OutExtension:
          - .js=.js

  SaveCryptoDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: dist/handlers/saveCryptoData.lambdaHandler
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref CryptoPricesTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CryptoPricesTable
      Role: !Ref NimoRoleArn
      Events:
        SaveCryptoDataApi:
          Type: Api
          Properties:
            Path: /saveCryptoData
            Method: get
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/handlers/saveCryptoData.ts
        OutExtension:
          - .js=.js

  CryptoPricesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: CryptoPricesTable
      AttributeDefinitions:
        - AttributeName: ids
          AttributeType: S
        - AttributeName: lastUpdatedAt
          AttributeType: N
      KeySchema:
        - AttributeName: ids
          KeyType: HASH
        - AttributeName: lastUpdatedAt
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

Outputs:
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "IAM Role used by Hello World function"
    Value: !Ref NimoRoleArn
  CryptoDetailsFetcherFunction:
    Description: "Crypto Details Fetcher Lambda Function ARN"
    Value: !GetAtt CryptoDetailsFetcherFunction.Arn
  SaveCryptoDataFunction:
    Description: "Save Crypto Data Lambda Function ARN"
    Value: !GetAtt SaveCryptoDataFunction.Arn
  CryptoPricesTableName:
    Description: "DynamoDB Table Name"
    Value: !Ref CryptoPricesTable
