AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for nimo

Globals:
  Function:
    Timeout: 3
    Runtime: nodejs18.x
    Architectures:
      - x86_64

Resources:
  # IAM Role for Lambda Functions
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-lambda-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: !GetAtt CryptoPricesTable.Arn

  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/handlers/
      Handler: app.lambdaHandler
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
    Metadata:
      BuildMethod: esbuild

  CryptoDetailsFetcherFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/handlers/
      Handler: fetchCryptoData.lambdaHandler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref CryptoPricesTable
    Metadata:
      BuildMethod: esbuild

  SaveCryptoDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/handlers/
      Handler: saveCryptoData.lambdaHandler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref CryptoPricesTable
      Events:
        SaveCryptoDataApi:
          Type: Api
          Properties:
            Path: /saveCryptoData
            Method: post
    Metadata:
      BuildMethod: esbuild

  CryptoPricesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-crypto-prices
      AttributeDefinitions:
        - AttributeName: ids
          AttributeType: S
        - AttributeName: lastUpdatedAt
          AttributeType: N
      KeySchema:
        - AttributeName: ids
          KeyType: HASH
        - AttributeName: lastUpdatedAt
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      DeletionPolicy: Retain

Outputs:
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"

  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn

  HelloWorldFunctionIamRole:
    Description: "IAM Role created for Hello World function"
    Value: !GetAtt LambdaExecutionRole.Arn

  CryptoDetailsFetcherFunction:
    Description: "Crypto Details Fetcher Lambda Function ARN"
    Value: !GetAtt CryptoDetailsFetcherFunction.Arn

  SaveCryptoDataFunction:
    Description: "Save Crypto Data Lambda Function ARN"
    Value: !GetAtt SaveCryptoDataFunction.Arn

  CryptoPricesTableName:
    Description: "DynamoDB Table Name"
    Value: !Ref CryptoPricesTable

  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
